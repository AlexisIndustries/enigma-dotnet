@model EnigmaDotnet.Models.Book

@{
    ViewBag.Title = "Создание новой книги";
}

<h2>Создание новой книги</h2>

@if (ViewBag.Authors != null)
{
    @using (Html.BeginForm("CreateBook", "Book", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.Title, "Название книги", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorId, "Автор", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AuthorId, new SelectList(ViewBag.Authors, "AuthorId", "Name"), "Выберите автора", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, "Издательство", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, "Год издания", htmlAttributes: new { @class = "control-label col-md-2"  })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, "Количество в наличии", htmlAttributes: new { @class = "control-label col-md-2"  })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.Image, "Изображение обложки", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="image" class="form-control" />
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
        </div>
        
            <div class="mt-3">
                <input type="submit" value="Создать" class="btn btn-primary"/>
                @Html.ActionLink("Вернуться к списку", "Index", "Home", null, new {@class = "btn btn-primary"})
            </div>
    }
}
else
{
    <h4>Невозможно отобразить форму создания книги! Необходимо создать хотя бы одного автора.</h4>
    <a class="btn btn-primary" asp-area="" asp-controller="Author" asp-action="CreateAuthor">Создать автора</a>
}